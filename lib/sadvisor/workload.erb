<% foreign_keys = [] %>
# rubocop:disable all

$workload = Sadvisor::Workload.new do
  # Define entities along with the size and cardinality of their fields
  # as well as an estimated number of each entity
  <% workload.entities.values.each do |entity| %>
  (Entity '<%= entity.name %>' do
    <% entity.fields.values.each do |field| %>
      <%
        if field.is_a? Sadvisor::ForeignKeyField
          foreign_keys << field
          next
        end
      %>
      <%= field.subtype_name name_case: :camel %> '<%= field.name %>',<%=
      case [field.class]
      when [Sadvisor::StringField]
        "#{field.size}, "
      else
        ''
      end
      %> count: <%= field.cardinality %>

    <% end %>
  end) * <%= entity.count %>


  <% end %>

  <% foreign_keys.each do |key| %>
    ForeignKey '<%= key.name %>', '<%= key.parent.name %>', '<%= key.entity.name %>', count: <%= key.cardinality %>

  <% end %>

  # Define queries and their relative weights
  <% workload.query_weights.each do |query, weight| %>
  Q '<%= query.query %>', <%= weight %>

  <% end %>
end

# rubocop:enable all
