grammar CQL

  rule statement
    'SELECT' space identifier_list space 'FROM' space entity
        where_clause? order_clause? limit_clause? <Statement>
  end

  rule entity
    [A-z]+ <Entity>
  end

  rule where_clause
    space 'WHERE' space expression <WhereClause>
  end

  rule limit_clause
    space 'LIMIT' space integer <LimitClause>
  end

  rule order_clause
    space 'ORDER BY' space field_list (space ('DESC' / 'ASC'))? <OrderByClause>
  end

  rule expression
    condition space 'AND' space expression <Expression> / condition
  end

  rule operator
    '=' <Operator> /
    '!=' <Operator> /
    '<=' <Operator> /
    '>=' <Operator> /
    '<' <Operator> /
    '>' <Operator>
  end

  rule condition
    field space? operator space? (field / literal) <Condition>
  end

  rule literal
    float / integer / string
  end

  rule integer
    ('+' / '-')? [0-9]+ <IntegerLiteral>
  end

  rule float
    ('+' / '-')? [0-9]+ (('.' [0-9]+) / ('e' [0-9]+)) <FloatLiteral>
  end

  rule string
    '"' ([^"\\] / "\\" . )* '"' <StringLiteral>
  end

  rule identifier
    [A-z]+ <Identifier>
  end

  rule field
    identifier '.' field <Field> /
    identifier '.' identifier <Field>
  end

  rule field_list
    field space? ',' space? field_list <FieldList> / field
  end

  rule identifier_list
    identifier space? ',' space? identifier_list <IdentifierList> / identifier
  end

  rule space
    [\s]+
  end
end
